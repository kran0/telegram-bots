
services:

  ytdl:
    image: docker.io/bennythink/ytdlbot:latest
    restart: always
    command: [ "python", "ytdl_bot.py" ]
    environment:
      # Main
      APP_ID:   "${APP_ID}" # REQUIRED, get it from https://core.telegram.org/
      APP_HASH: "${APP_HASH}" #REQUIRED
      TOKEN:    "${TOKEN}" # REQUIRED
      PYRO_WORKERS: 100 # number of workers for pyrogram, default is 100
      OWNER: "${OWNER}" # owner username
      AUTHORIZED_USER: "${AUTHORIZED_USER}" #users that could use this bot, user_id, separated with ,
#      REQUIRED_MEMBERSHIP: group or channel username, user must join this group to use the bot. Could be use with above AUTHORIZED_USER
      ENABLE_FFMPEG: "true"
      PLAYLIST_SUPPORT: "true"
#      GOOGLE_API_KEY: YouTube API key, required for YouTube video subscription.
#      AUDIO_FORMAT: audio format, default is m4a. You can set to any known and supported format for ffmpeg. For example,mp3, flac, etc. warning m4a is the fastest. Other formats may affect performance.
#      ARCHIVE_ID: group or channel id/username. All downloads will send to this group first and then forward to end user. Inline button will be lost during the forwarding.

      # Celery
#      ENABLE_CELERY: "enable" #Distribution mode, default: disable. You'll can setup workers in different locations.
#      WORKERS:       "2" workers count for celery

      # VIP mode params
#      VIP: "enable" #VIP mode, default: disable
#      MYSQL_HOST: you'll have to setup MySQL if you enable VIP mode
#      MYSQL_USER
#      MYSQL_PASS
##      REDIS: "redis" #REQUIRED if you need VIP mode and cache warning Don't publish your redis server on the internet. warning
#      QUOTA: quota in bytes
#      EX: quota expire time
#      MULTIPLY: vip quota comparing to normal quota

      # Donations and payments
#      USD2CNY: exchange rate
#      AFD_LINK
#      COFFEE_LINK
#      COFFEE_TOKEN
#      AFD_TOKEN
#      AFD_USER_ID
#    healthcheck:
#      test: [ "CMD", "sh", "-c", "ps -o pid,comm -T | grep -q python" ]
#      interval: 10s
#      retries: 10
#      start_period: 30s
#      timeout: 10s
